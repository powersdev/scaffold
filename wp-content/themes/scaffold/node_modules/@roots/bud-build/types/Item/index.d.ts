import { Framework, Item as Contract, Loader } from '@roots/bud-framework';
import { Base } from '../shared/Base';
export declare namespace Item {
    type ConstructorOptions = Contract.ConstructorOptions;
}
/**
 * Item class
 *
 * @public
 */
export declare class Item extends Base implements Contract {
    /**
     * Loader
     *
     * @public
     */
    loader: Contract['loader'];
    /**
     * Loader options
     *
     * @public
     */
    options: Contract['options'];
    /**
     * Class constructor
     *
     * @param options - {@link Contract.Options}
     */
    constructor(_app: () => Framework, options?: {
        loader?: Item['loader'];
        options?: Item['options'];
    });
    /**
     * {@inheritDoc @roots/Framework-Framework#Item.Abstract.getLoader}
     *
     * @public
     * @decorator `@bind`
     */
    getLoader(): Loader;
    /**
     * @public
     * @decorator `@bind`
     */
    setLoader(loader: Contract['loader']): this;
    /**
     * @public
     * @decorator `@bind`
     */
    setOptions(options: Item['options']): this;
    getOptions(): Item['options'];
    /**
     * @public
     * @decorator `@bind`
     */
    mergeOptions(options: Contract.Options): this;
    /**
     * @public
     * @decorator `@bind`
     */
    toWebpack(): Contract.Output;
}
//# sourceMappingURL=index.d.ts.map