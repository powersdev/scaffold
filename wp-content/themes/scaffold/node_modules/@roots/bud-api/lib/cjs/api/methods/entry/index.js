"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.globAssets = exports.entry = void 0;
const bud_support_1 = require("@roots/bud-support");
const { isArray, isString } = bud_support_1.lodash;
const isGlobular = (str) => ['*', '{', '}'].filter(c => str.includes(c))?.length > 0;
const entry = async function (...userInput) {
    const ctx = this;
    const glob = globAssets.bind(this);
    const normalizedInput = isString(userInput[0])
        ? { [userInput[0]]: userInput[1] }
        : userInput[0];
    ctx.hooks.async('build.entry', async (all) => {
        await Promise.all(Object.entries(normalizedInput).map(async ([name, entry]) => {
            const normalizedImports = isArray(entry.import ?? entry)
                ? entry.import ?? entry
                : [entry.import ?? entry];
            this.log(`inputs`, normalizedImports);
            const value = (await Promise.all(normalizedImports.map(async (request) => isGlobular(request) ? await glob(request) : request))).flat();
            all = {
                ...(all ?? {}),
                [name]: {
                    ...(!isString(entry) && !isArray(entry) ? entry : {}),
                    import: value,
                },
            };
        }));
        return all;
    });
    return ctx;
};
exports.entry = entry;
async function globAssets(search) {
    const cwd = this.path('@src');
    try {
        this.log(`search`, search);
        const results = await bud_support_1.globby.globby(search, { cwd });
        this.log(`results`, results);
        if (!results.length) {
            this.error(`bud.entry found no files matching ${JSON.stringify(search)}. check your config for errors. files should be specified relative to ${cwd}. fast glob syntax can be referenced here https://git.io/JkGbw`);
            throw new Error(`nothing resolvable for ${JSON.stringify(search)} query of results for ${cwd}`);
        }
        return results;
    }
    catch (error) {
        throw new Error(error);
    }
}
exports.globAssets = globAssets;
