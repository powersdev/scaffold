import * as Framework from '@roots/bud-framework';
/**
 * API service
 *
 * @remarks
 * Binds facade methods to the framework and provides a way to list them,
 * call them, and otherwise manipulate them.
 *
 * @public
 */
export declare class Api extends Framework.Service implements Framework.Api {
    /**
     * Queued method calls
     *
     * @internal
     */
    queue: Array<[string, ...any[]]>;
    /**
     * Trace of all method calls
     *
     * @internal
     */
    trace: Array<[string, ...any[]]>;
    /**
     * Service bootstrap event
     *
     * @internal
     */
    bootstrap(): Promise<void>;
    /**
     * Service registered event
     *
     * @internal
     */
    registered(): Promise<void>;
    /**
     * @internal
     */
    bindFacade(name: string): void;
    /**
     * Call an api method directly
     *
     * @public
     */
    call(name: string, ...args: any[]): Promise<any>;
    /**
     * Execute all queued method calls
     *
     * @public
     */
    processQueue(): Promise<void>;
    /**
     * Dump the method call trace
     *
     * @public
     */
    dump(): void;
}
//# sourceMappingURL=api.service.d.ts.map