"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.mixin = void 0;
/**
 * Bind a {@link Class} to the {@link Framework}.
 *
 * @remarks
 * Constructor parameters can be specified using an array.
 *
 * @example
 * Bind a class named `FooClass` and expose `app.propertyName`:
 *
 * ```js
 * app.mixin({propertyName: [FooClass]})
 * ```
 *
 * Specify constructor parameters with a tuple:
 *
 * ```js
 * app.mixin({
 *   bindingName: [BindingClass, foo, bar]
 * })
 * ```
 *
 * @typeParam Binding - Map of {@link Framework} keys to classes
 *
 * @public
 * @decorator `@bind`
 */
function mixin(properties) {
    Object.entries(properties).map(([name, [ClassObj, ...params]]) => {
        this[name] = new ClassObj(...params);
        if (!(this[name] instanceof ClassObj)) {
            this.error(`${name} not properly bound to ${this.name} framework instance`);
            this.dump(this.name);
            this.dump(ClassObj);
        }
    });
}
exports.mixin = mixin;
