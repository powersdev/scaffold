"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.extensions = void 0;
const CleanWebpackPlugin = __importStar(require("./clean-webpack-plugin"));
const CopyWebpackPlugin = __importStar(require("./copy-webpack-plugin"));
const MiniCssExtractPlugin = __importStar(require("./mini-css-extract-plugin"));
const DefineWebpackPlugin = __importStar(require("./webpack-define-plugin"));
const HotModuleReplacementPlugin = __importStar(require("./webpack-hot-module-replacement-plugin"));
const WebpackManifestPlugin = __importStar(require("./webpack-manifest-plugin"));
const WebpackProvidePlugin = __importStar(require("./webpack-provide-plugin"));
/**
 * Built-in extensions factory
 *
 * @returns Records of built-in compiler plugins
 *
 * @public
 */
function extensions() {
    return {
        ['webpack-provide-plugin']: WebpackProvidePlugin,
        ['clean-webpack-plugin']: CleanWebpackPlugin,
        ['copy-webpack-plugin']: CopyWebpackPlugin,
        ['webpack-define-plugin']: DefineWebpackPlugin,
        ['webpack-hot-module-replacement-plugin']: HotModuleReplacementPlugin,
        ['webpack-manifest-plugin']: WebpackManifestPlugin,
        ['mini-css-extract-plugin']: MiniCssExtractPlugin,
    };
}
exports.extensions = extensions;
