"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AdjacencyList = void 0;
/**
 * Directed adjacency list for project modules
 *
 * @public
 */
class AdjacencyList {
    /**
     * Class constructor
     *
     * @public
     */
    constructor(manifests) {
        this.manifests = manifests;
        this.has = this.has.bind(this);
        this.adjacentTo = this.adjacentTo.bind(this);
        this.fromRoot = this.fromRoot.bind(this);
    }
    /**
     * Map of module keys to adjacent required modules
     *
     * @public
     */
    get modules() {
        return new Map(Object.values(this.manifests)
            .sort((a, b) => a.name?.localeCompare(b.name))
            .map(manifest => {
            return [manifest.name, new Set(manifest.requires.map(r => r[0]))];
        }));
    }
    /**
     * Whether a given key exists
     *
     * @public
     */
    has(key) {
        return this.modules.has(key);
    }
    /**
     * Dependencies adjacent to a given key
     *
     * @public
     */
    adjacentTo(name) {
        return this.modules.get(name) ?? new Set([]);
    }
    /**
     * Ordered dependencies from a given key
     *
     * @public
     */
    fromRoot(root) {
        if (!this.has(root))
            return [];
        const ordered = [];
        const unordered = this.adjacentTo(root);
        unordered.forEach(dependency => {
            if (ordered.includes(dependency))
                return;
            this.adjacentTo(dependency).forEach(d => unordered.add(d));
            ordered.unshift(dependency);
        });
        return ordered.map(name => this.manifests[name]).filter(Boolean);
    }
}
exports.AdjacencyList = AdjacencyList;
