"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Dependencies = void 0;
const Framework = __importStar(require("@roots/bud-framework"));
const dependencies_dependencies_1 = require("./dependencies.dependencies");
/**
 * Dependencies management service
 *
 * @public
 */
class Dependencies extends Framework.Service {
    constructor() {
        super(...arguments);
        /**
         * Service ident
         *
         * @internal
         */
        this.ident = 'dependencies';
    }
    /**
     * Service registration event
     *
     * @internal
     * @decorator `@bind`
     */
    async register() {
        this.client = new dependencies_dependencies_1.DependenciesManager(this.app.path()).client;
    }
    /**
     * Installs all the things
     *
     * @param dep - dependencies to install
     *
     * @public
     * @decorator `@bind`
     */
    async install(packages) {
        const logger = new dependencies_dependencies_1.Signale({ interactive: true });
        try {
            logger.await({
                message: 'installing packages',
                suffix: packages,
            });
            await this.client.install(packages.map(v => [v.name, v.version]), true, message => {
                logger.log(message);
            });
            logger.success({
                message: 'installing packages',
            });
        }
        catch (err) {
            logger.error(err);
        }
    }
}
__decorate([
    dependencies_dependencies_1.bind
], Dependencies.prototype, "register", null);
__decorate([
    dependencies_dependencies_1.bind
], Dependencies.prototype, "install", null);
exports.Dependencies = Dependencies;
