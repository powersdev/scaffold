"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.makeContext = exports.Manifest = exports.Env = exports.Dir = exports.Context = exports.Application = void 0;
const application_1 = require("./application");
Object.defineProperty(exports, "Application", { enumerable: true, get: function () { return application_1.Application; } });
const context_1 = require("./context");
Object.defineProperty(exports, "Context", { enumerable: true, get: function () { return context_1.Context; } });
const dir_1 = require("./dir");
Object.defineProperty(exports, "Dir", { enumerable: true, get: function () { return dir_1.Dir; } });
const disk_1 = require("./disk");
const env_1 = require("./env");
Object.defineProperty(exports, "Env", { enumerable: true, get: function () { return env_1.Env; } });
const manifest_1 = require("./manifest");
Object.defineProperty(exports, "Manifest", { enumerable: true, get: function () { return manifest_1.Manifest; } });
/**
 * Context factory
 *
 * @remarks
 * @see {@link https://mael.dev/clipanion/docs/contexts}
 *
 * @param rootDir - project directory
 * @returns {@link Context}
 *
 * @public
 */
const makeContext = async (rootDir = process.cwd()) => {
    const dir = await new dir_1.Dir(rootDir).find();
    const application = await new application_1.Application().find();
    const env = new env_1.Env(dir.projectDir);
    const disk = await new disk_1.Disk(dir.projectDir).findConfigs();
    const manifest = await new manifest_1.Manifest(disk).read();
    return new context_1.Context(application.name?.split(`@roots/`).pop() ?? 'bud', dir.cwd, dir.projectDir, manifest, disk, application, env);
};
exports.makeContext = makeContext;
