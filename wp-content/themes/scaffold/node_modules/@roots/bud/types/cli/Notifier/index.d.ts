import { Framework } from '@roots/bud-framework';
import { Notification, NotificationCallback, NotificationCenter } from 'node-notifier';
interface NotificationCenter {
    notify(notification?: Notification, callback?: NotificationCallback): NotificationCenter;
}
export declare class Notifier {
    app: Framework;
    /**
     * Node notifier notification center
     *
     * @public
     */
    notificationCenter: NotificationCenter;
    /**
     * Binary path
     *
     * @public
     */
    get binary(): string;
    /**
     * Class constructor
     *
     * @public
     */
    constructor(app: Framework);
    get title(): string;
    get group(): string;
    get message(): string;
    get open(): string;
    /**
     * Emits notification
     *
     * @param app - Framework
     *
     * @public
     * @decorator `@bind`
     */
    notify(): Promise<void>;
    /**
     * node notifier callback
     *
     * @public
     * @decorator `@bind`
     */
    callback(error: Error, response: any, metadata: any): void;
}
export {};
//# sourceMappingURL=index.d.ts.map